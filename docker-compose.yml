version: "3.7"

services:

  front:
    build: front-end/
    image: front-end
    container_name: front-end
    ports:
      - "4200:4200"
    env_file:
      - .env
    networks:
      - docker-network
    depends_on:
      - db
    volumes:
      - ./front-end/:/usr/src/app
    restart: always

  back:
    build: back-end/
    image: back-end
    container_name: back-end
    ports:
      - "3000:3000"
    env_file:
      - .env
    networks:
      - docker-network
    depends_on:
      - db
    restart: always
    volumes:
      - ./back-end:/usr/src/app

  db:
    image: postgres:10.5
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
        # - ./sql/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    environment:
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_USER=${DB_NAME}
    networks:
      - docker-network
    restart: always

  adminer:           
    image: adminer         
    container_name: adminer
    restart: always           
    ports:              
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_DB_DRIVE=${DB_DRIVER}
      - ADMINER_DEFAULT_DB_HOST=postgres
      - ADMINER_DEFAULT_DB_NAME=${DB_NAME}
    depends_on:
      - db
    networks:
      - docker-network

volumes:
  db:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${HOME}/data/db"

networks:
  docker-network:
    driver: bridge

